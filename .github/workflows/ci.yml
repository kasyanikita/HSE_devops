name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_ubuntu:
    runs-on: ubuntu-latest
    env:
       app_name: app_${RUNNER_OS}_ver.${GITHUB_RUN_NUMBER}
    steps:
      - uses: actions/checkout@v3
      - name: build hello world
        run: |
          g++ main.cpp -o ${{ env.app_name }}
          
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: my_app_ubuntu
          path: app_**
          retention-days: 1
          
  build_macos:
    runs-on: macos-latest
    env:
       app_name: app_${RUNNER_OS}_ver.${GITHUB_RUN_NUMBER}
    steps:
      - uses: actions/checkout@v3
      - name: build hello world
        run: |
          g++ main.cpp -o ${{ env.app_name }}
          
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: my_app_macos
          path: app_**
          retention-days: 1
          
  build_win:
    runs-on: windows-latest
    env:
       app_name: app_${RUNNER_OS}_ver.${GITHUB_RUN_NUMBER}
    steps:
      - uses: actions/checkout@v3
      - uses: ilammy/msvc-dev-cmd@v1.10.0
      - name: build hello world
        run: |
            cl /EHsc main.cpp
          
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: my_app_windows
          path: main.exe
          retention-days: 1


  fail:
    if: failure()
    runs-on: ubuntu-latest
    needs: [build_ubuntu, build_macos, build_win]
    steps:
      - name: send telegram message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Build fail
            ${{ github.actor }} created commit: 
            Commit message: ${{ github.event.commits[0].message }}
            Repository: ${{ github.repository }}
            
  success:
    if: success()
    runs-on: ubuntu-latest
    needs: [build_ubuntu, build_macos, build_win]
    steps:
      - name: send telegram message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Build success
            ${{ github.actor }} created commit: 
            Commit message: ${{ github.event.commits[0].message }}
            Repository: ${{ github.repository }}
            
  
  docker_upload:
     runs-on: ubuntu-latest
     needs: [success]
     steps:
       - uses: actions/checkout@v1
       - name: Publish to Docker Hub
         
         uses: docker/build-push-action@v1
         with:
           username: ${{ secrets.DOCKER_USER }}
           password: ${{ secrets.DOCKER_PASSWORD }}
           repository: kasyanikita/devopshse
           tags: latest
